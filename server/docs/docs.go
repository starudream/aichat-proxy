// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "github repo",
            "url": "https://github.com/starudream/aichat-proxy"
        },
        "license": {
            "name": "Apache-2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/_sse.js": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "0_global"
                ],
                "summary": "TamperMonkey SSE Script File",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "plain"
                        }
                    }
                }
            }
        },
        "/chat/completions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Follows the exact same API spec as ` + "`" + `https://platform.openai.com/docs/api-reference/chat` + "`" + `",
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "2_chat"
                ],
                "summary": "Chat Completions",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "*",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/router.ChatCompletionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.ChatCompletionResp"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "0_global"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/models": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Follows the exact same API spec as ` + "`" + `https://platform.openai.com/docs/api-reference/models/list` + "`" + `",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "1_model"
                ],
                "summary": "Model List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.ListModelResp"
                        }
                    }
                }
            }
        },
        "/v1/chat/completions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Follows the exact same API spec as ` + "`" + `https://platform.openai.com/docs/api-reference/chat` + "`" + `",
                "produces": [
                    "application/json",
                    "text/event-stream"
                ],
                "tags": [
                    "2_chat"
                ],
                "summary": "Chat Completions",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "*",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/router.ChatCompletionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.ChatCompletionResp"
                        }
                    }
                }
            }
        },
        "/v1/models": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Follows the exact same API spec as ` + "`" + `https://platform.openai.com/docs/api-reference/models/list` + "`" + `",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "1_model"
                ],
                "summary": "Model List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/router.ListModelResp"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "tags": [
                    "0_global"
                ],
                "summary": "Show Version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/config.Version"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.Version": {
            "type": "object",
            "properties": {
                "buildDate": {
                    "type": "string"
                },
                "compiler": {
                    "type": "string"
                },
                "gitCommit": {
                    "type": "string"
                },
                "gitTreeState": {
                    "type": "string"
                },
                "gitVersion": {
                    "type": "string"
                },
                "goVersion": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                }
            }
        },
        "router.ChatCompletionChoice": {
            "type": "object",
            "properties": {
                "finish_reason": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "message": {
                    "$ref": "#/definitions/router.ChatCompletionMessage"
                }
            }
        },
        "router.ChatCompletionMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "router.ChatCompletionReq": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/router.ChatCompletionMessage"
                    }
                },
                "model": {
                    "type": "string"
                }
            }
        },
        "router.ChatCompletionResp": {
            "type": "object",
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/router.ChatCompletionChoice"
                    }
                },
                "created": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "router.ListModelResp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/router.Model"
                    }
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "router.Model": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "owned_by": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{"http"},
	Title:            "AIChat Proxy API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
