consumes:
- application/json
definitions:
  config.Version:
    properties:
      buildDate:
        type: string
      compiler:
        type: string
      gitCommit:
        type: string
      gitTreeState:
        type: string
      gitVersion:
        type: string
      goVersion:
        type: string
      platform:
        type: string
    type: object
  router.ChatCompletionChoice:
    properties:
      delta:
        allOf:
        - $ref: '#/definitions/router.ChatCompletionMessage'
        description: 模型输出的增量内容（流式）
      finish_reason:
        description: 模型停止输出原因
        type: string
      index:
        description: 消息索引
        type: integer
      message:
        allOf:
        - $ref: '#/definitions/router.ChatCompletionMessage'
        description: 模型输出消息列表（非流式）
    type: object
  router.ChatCompletionMessage:
    properties:
      content:
        description: 内容
        type: string
      reasoning_content:
        description: 推理内容（仅响应）
        type: string
      role:
        description: 角色
        type: string
    type: object
  router.ChatCompletionReq:
    properties:
      messages:
        description: 消息列表
        items:
          $ref: '#/definitions/router.ChatCompletionMessage'
        type: array
      model:
        description: 模型 Id
        type: string
      stream:
        description: 是否流式
        type: boolean
    type: object
  router.ChatCompletionResp:
    properties:
      choices:
        description: 模型输出内容
        items:
          $ref: '#/definitions/router.ChatCompletionChoice'
        type: array
      created:
        description: 请求创建的时间戳（秒级）
        type: integer
      id:
        description: 请求的唯一标识
        type: string
      model:
        description: 模型 Id
        type: string
      object:
        description: 响应类型
        type: string
      usage:
        allOf:
        - $ref: '#/definitions/router.ChatCompletionUsage'
        description: 用量
    type: object
  router.ChatCompletionUsage:
    properties:
      completion_tokens:
        description: 输出 tokens
        type: integer
      prompt_tokens:
        description: 输入 tokens
        type: integer
      total_tokens:
        description: 总消耗 tokens
        type: integer
    type: object
  router.ListModelResp:
    properties:
      data:
        description: 模型列表
        items:
          $ref: '#/definitions/router.Model'
        type: array
      object:
        description: 固定为 list
        type: string
    type: object
  router.Model:
    properties:
      created:
        type: integer
      id:
        description: 模型 Id
        type: string
      object:
        type: string
      owned_by:
        type: string
    type: object
info:
  contact:
    name: github repo
    url: https://github.com/starudream/aichat-proxy
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: AIChat Proxy API
  version: "1.0"
paths:
  /_sse.js:
    get:
      deprecated: true
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: TamperMonkey SSE Script File
      tags:
      - file
  /health:
    get:
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health Check
      tags:
      - common
  /v1/chat/completions:
    post:
      description: Follows the exact same API spec as `https://platform.openai.com/docs/api-reference/chat`
      parameters:
      - description: Request
        in: body
        name: '*'
        required: true
        schema:
          $ref: '#/definitions/router.ChatCompletionReq'
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/router.ChatCompletionResp'
      security:
      - ApiKeyAuth: []
      summary: Chat Completions
      tags:
      - chat
  /v1/models:
    get:
      description: Follows the exact same API spec as `https://platform.openai.com/docs/api-reference/models/list`
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/router.ListModelResp'
      security:
      - ApiKeyAuth: []
      summary: Model List
      tags:
      - model
  /version:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.Version'
      summary: Show Version
      tags:
      - common
produces:
- application/json
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- name: common
- name: file
- name: model
- name: chat
